basePath: /api
definitions:
  Category:
    properties:
      id:
        type: string
      name:
        type: string
      userid:
        type: string
    type: object
  ErrorResponse:
    properties:
      message:
        example: error appeared
        type: string
    type: object
  Password:
    properties:
      category:
        $ref: '#/definitions/Category'
      description:
        type: string
      id:
        type: string
      password:
        type: string
      title:
        type: string
      url:
        type: string
      userid:
        type: string
      username:
        type: string
    type: object
  users.User:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  description: The API for the Password Safe Application
  title: Password Safe API
  version: 1.0.0
paths:
  /categories:
    get:
      description: Get all categories of the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a category for the user
      parameters:
      - description: Category object that needs to be created
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a category
      tags:
      - categories
  /categories/{id}:
    delete:
      description: Delete a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a category
      tags:
      - categories
    get:
      description: Get a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a category by ID
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Update a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Category object that needs to be updated
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a category
      tags:
      - categories
  /passwords:
    get:
      description: Get all passwords of the user
      parameters:
      - description: page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Password'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all passwords
      tags:
      - passwords
    post:
      consumes:
      - application/json
      description: Create a password entry for the user
      parameters:
      - description: Password object that needs to be created
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/Password'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Password'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a password entry
      tags:
      - passwords
  /passwords/{id}:
    delete:
      description: Delete a password entry for the user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete a password entry
      tags:
      - passwords
    get:
      description: Get a password by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Password'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get a Password
      tags:
      - passwords
    put:
      consumes:
      - application/json
      description: Update a password entry for the user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Password object that needs to be updated
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/Password'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Password'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a password entry
      tags:
      - passwords
  /users:
    post:
      description: Register a new user and return the user
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Register a new user
      tags:
      - users
  /users/{id}:
    put:
      description: Update a user and return the user
      parameters:
      - description: The user ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a user
      tags:
      - users
  /users/check:
    get:
      description: Check if the user is logged in
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Check if the user is logged in
      tags:
      - users
  /users/login:
    post:
      description: Log in a user and set a cookie with the token
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Log in a user
      tags:
      - users
  /users/logout:
    post:
      description: Log out a user and remove the token cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Log out a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    description: Token for authentication
    in: header
    name: token
    type: apiKey
swagger: "2.0"
